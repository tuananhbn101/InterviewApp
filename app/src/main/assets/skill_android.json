[{"id":1,"type":"Kiến thức lập trình chung ","junior":"- Code convension\n- OOP\n- Cấu trúc rẽ nhánh\n- Vòng lặp\n- DataType tổ chức dữ liệu","middle":"- Thuật toán cơ bản ( đệ quy, sắp xếp )\n- Tư duy thuật toán\n- Hiểu về 5 nguyên lý solid","senior":"- Thuật toán khó, nâng cao ( quy hoạch động, bit, tree, đồ thị )\n-  Tính toán độ phức tạp thuật toán"},{"id":2,"type":"Design patterns","junior":"- Singleton\n- Builder\n- Adapter\n- Factory","middle":"- Dependency Injection\n- Observer\n- Strategy \n- Facade\n- Decorator\n- State","senior":"- Composite\n- Command\n- Sử dụng, tùy biến design pattern theo task cụ thể"},{"id":3,"type":"Threading","junior":"- Thread ( Main / UI , Background ) \n- Handle / Looper\n- Schedule\n- AsyncTask","middle":"- Synchronize data trong multi-thread \n- Concurrent \n- Atomic","senior":"- Memory\n- Crash\n- blocking\n- non-blocking"},{"id":4,"type":"App Architectures","junior":"- MVC\n- MVP","middle":"- MVI\n- MVRx\n- MVVM \n- Hiểu rõ sự khác nhau giữa các mô hình","senior":"- Sử dụng, tùy biến mô hình theo task cụ thể\n- Dependecy Injection ( Dagger, Hilt, Koin, Kodein )"},{"id":5,"type":"UML Diagram","junior":"- Use case diagram\n- Class diagram","middle":"- Component Diagram\n- Activity Diagram\n- Sequence Diagram","senior":"- Package diagram\n- Object Diagram\n- Deployment Diagram"},{"id":6,"type":"Git","junior":"- push\n- pull\n- ignore\n- merge","middle":"- stashing\n- branch\n- tag\n- compare version ( history, another branch ... )\n- rebase\n- revert","senior":"- git flow manager"},{"id":7,"type":"Client - Server Protocol","junior":"- Rest Api\n- SocketIO, WebSocket","middle":"- Protocol Message ( FlatBuffer, Protobuf, GRPC, GraphQL... )\n- Soap","senior":"- Hiểu sâu về cấu trúc message (data, buffer, bit, byte...)\n- Tùy biến, tổ chức cấu trúc mới\n- Internet Protocol: Application layer, Transport Layer"},{"id":8,"type":"Data Format","junior":"- Json\n- Plain text","middle":"- HTML\n- XML","senior":""},{"id":9,"type":"Software","junior":"- Android Studio\n- Figma\n- Excel\n- Trello / Asana","middle":"- Photoshop / Firework\n- Sourcetree / Smartgit\n- JetBrain IDEs","senior":""},{"id":10,"type":"Research","junior":"- Khả năng tự Research khi xảy ra vấn đề\n- Lọc keyword và mã lỗi","middle":"- Nghiên cứu công nghệ mới","senior":""},{"id":11,"type":"Java","junior":"- Init\n- Closures\n- Class / Interface\n- Enums\n- Protocol","middle":"- Generic\n- Reflection","senior":""},{"id":12,"type":"Kotlin","junior":"- Init\n- Closures\n- Class / Interface\n- Enums\n- Protocol","middle":"- Generic\n- Reflection\n- Null Safety","senior":""},{"id":13,"type":"C, C++ ","junior":"- Init\n- Closures\n- Class / Interface\n- Enums\n- Protocol","middle":"Building Native Lib (sử dụng NDK , CMake)","senior":""},{"id":14,"type":"Gradle","junior":"- Setting app config ( sdk, id, version ... )\n- Dependencies ( module, jar, aar, bintray ..... )","middle":"- BuildType ( minify, proguard ... )\n- SigningConfigs\n- Variable","senior":"- Tạo task tùy biến theo yêu cầu\n- Multi project"},{"id":15,"type":"Proguard","junior":"- Configure proguard với file default ","middle":"- Thêm các command theo 3rd-library sử dụng","senior":"- Create new Rule\n- Mapping\n- Debug và xử lí được lỗi"},{"id":16,"type":"JNI","junior":"- Sử dụng JNI cơ bản\n- Biết cách giao tiếp giữa java và C , C++","middle":"- Sử dụng prebuild, build NDK và CMake \n- Thành thạo việc chuyển đổi các \ndata type giữa java và C, C++\n- Call Invoke method giữa Java và \nC, C++, giúp C, C++ có thể sử dụng \nbiến và funtion trên Java ","senior":"- Xử lý các vấn đề liên quan đến C, C++ trong library\n- Xử lý các vấn đề liên quan đến performer trong SDK\n"},{"id":17,"type":"User Interface","junior":"- Basic View ( Text, Button, EditText, FloatingButton, WebView .... )\n- Layout ( ConstrainLayout, LinearLayout, RelativeLayout, FrameLayout, ViewGroup )\n- View Group ( RecyclerView, ViewPager, ScrollView )\n- Notice ( Dialog, Toast, SnackBar )\n- Xml\n- Customview (add, remove, layoutparams)","middle":"- AppBar, ToolBar\n- BottomSheet\n- WebView Advance ( xử lí redirect, javascript, capture callback ... )\n- ViewGroup Advance ( multi type, .... )\n- Fragment ( Manager + transaction )\n- Customview (attribute, font, measure, layout)\n- Custom view ( canvas)","senior":"- Hiểu rõ cơ chế render của các view. Từ đó chọn và xử lí mang lại hiệu quả cho performance\n- Surface, Texture \n- Custom View ( OpenGL )"},{"id":18,"type":"Storage ","junior":"- SharePreference\n- File","middle":"- Database ( Room / Sqlite , Realm )\n- Database ( lightweight migrate )\n- LRUCache \n- Content Provider\n","senior":"- Tối ưu các bảng dữ liệu, xử lý performance đọc ghi vào các bảng dữ liệu\n- Migrate các DB với nhau\n- Sử dụng nhiều Db cùng 1 lúc thông qua factory pattern\n- Xử lý transaction khi có nhiều truy xuất\n- Xử lý đối với nguồn dữ liệu lớn"},{"id":19,"type":"Component","junior":"- Lifecycle\n- Service / Intent Service","middle":"- Intent ( Implicit, Explicit, Filter )\n- Broadcast / Receiver","senior":"- Task \u0026 Backstack"},{"id":20,"type":"Resource","junior":"- String ( array, quantity string )\n- Font ( downloadable fonts )\n- Style ( View )\n- Drawable ( mipmap, vector )","middle":"- String ( Spans )\n- Font ( XML )\n- Drawable ( adaptative icon, animation )","senior":"- String ( Localizeable )\n- Style ( Theme )\n- Drawable ( Bitmap )"},{"id":21,"type":"Jetpack","junior":"- Binding \n- ViewModel\n- DataBinding\n- Multidex","middle":"- Live Data\n- Notification\n- Navigation\n- Paging\n- Room","senior":"- Download Manager\n- Media Playback\n- Emoji\n- Material Design"},{"id":22,"type":"Animation","junior":"- Drawable\n- Vector","middle":"- Animation factory ( transition, interpolator, set... )\n- Androidx dynamic animation","senior":"- Custom animation ( canvas, matrix, opengl...)"},{"id":23,"type":"Image - Graphics","junior":"- Sử dụng và hiểu cơ chế load image\n- Audio","middle":"- Load thumb, lazy load\n- Xử lí với ảnh có dung lương \u0026 size lớn\n- Xử lý Bitmap ( scale, sử dụng \ngpuImage..)","senior":"- Xử lí leak memory\n- Thuật toán xử lí ảnh ( Matrix, Canvas )\n"},{"id":24,"type":"Audio - Video","junior":"- Sử dụng Audio\n- Sử dụng Video ( Exo .... )","middle":"- Hiểu vể các Dạng Video như HLS, Dash, FLV.\n- Hiểu về các Dạng Audio , Container Audio","senior":"- DRM\n- Buffering"},{"id":25,"type":"Camera","junior":"- Sử dụng camera với 1 số chức năng cơ bản ( flash, cameraFacing )","middle":"- Custom camera theo yêu cầu","senior":"- Xử lí memory\n- Tối ưu performance\n- Xử lý ảnh realtime"},{"id":26,"type":"Other","junior":"- Connectivity ( Wifi )\n- Permission ","middle":"- Connectivity ( Bluetooth ) \n- Sensor ( Position,  Motion .. )","senior":"- Connectivity ( nfc, telecom )"},{"id":27,"type":"Firebase","junior":"- Authentication\n- Notificattion","middle":"- Crashlytic \u0026 Analytics\n- Cloud Messaging\n- Remote Config\n- AB Testing","senior":"- ML Kit\n- Handle được số lượng dependency cần dùng và version update"},{"id":28,"type":"Map","junior":"- Loadmap\n- My Location","middle":"- Hiển thị đia điểm quanh\n- Direction","senior":""},{"id":29,"type":"Common Library","junior":"- Glide\n- Retrofit\n- Okhttp\n- Dagger","middle":"- admob\n- facebook sdk\n- google sdk","senior":"- payment ( paypal .. )\n- Có thể custom lại được source library"},{"id":30,"type":"Complex Library","junior":"Sử dụng \n- ffmpeg\n- webrtc\n- GPUImage\n....","middle":"Build và custom\n- ffmpeg\n- webrtc\n- GPUImage\n....","senior":""},{"id":31,"type":"Security","junior":"- Encrypt / Decrypt ( MD5, Base64 ... )","middle":"- Encrypt / Decrypt ( RSA, AES ) \n- Ssl \u0026 Certificate\n- Proguard \u0026 Keystore","senior":"- Hacking, Reversing, và cơ chế bảo mật data, app, anti-reversing\n- Bảo mật nhiều lớp\n- Nắm vững cơ chế, nguyên lý bảo mật của các thuật toán 1 chiều, 2 chiều, 1 khóa, khóa đối xứng"},{"id":32,"type":"PlayStore - Publishing","junior":"- Build app ( apk, bundle / aab )","middle":"- Setup app ( name, description, image, feature, content rating, countries .... )\n- Build app ( mapping file )\n- Convert apk \u003c-\u003e aap","senior":"- Xử lí các vấn đề liên quan policy\n"},{"id":33,"type":"Build Module","junior":"- Tách Module dạng injection trong ứng dụng\n- Tạo các Interface để kết nối module với application","middle":"- Custom các thư viện , tối ưu dung lượng cho library\n- Viết Script để build thư viện nhanh chóng\n- Push Library lên maven center, jfrog.. sử dụng gradle","senior":""},{"id":34,"type":"Unit Test","junior":"- FunctionTesting\n- Mockup\n- Stub","middle":"","senior":""},{"id":35,"type":"Memory","junior":"- Đọc hiểu \u0026 Phân tích ","middle":"- Xử lí được vấn đề phát sinh","senior":""},{"id":36,"type":"CPU","junior":"- Đọc hiểu \u0026 Phân tích ","middle":"- Xử lí được vấn đề phát sinh","senior":""},{"id":37,"type":"Network","junior":"- Đọc hiểu \u0026 Phân tích ","middle":"- Xử lí được vấn đề phát sinh","senior":""},{"id":38,"type":"Energy","junior":"- Đọc hiểu \u0026 Phân tích ","middle":"- Xử lí được vấn đề phát sinh","senior":""},{"id":39,"type":"Debug","junior":"- Debug Console","middle":"- Đọc crashlytic","senior":""},{"id":40,"type":"Log","junior":"- Ghi log theo task được yêu cầu","middle":"- Phân tích và xử lí khi có vấn đề phát sinh","senior":""}]